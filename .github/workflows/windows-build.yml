# This is a GitHub Actions workflow file.
# It defines a set of automated tasks to build the Windows executable.

name: Build Windows Executable

# This workflow will run automatically every time you push code to the 'main' branch.
on:
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab as well.
  workflow_dispatch:

jobs:
  build:
    # The type of virtual machine to run the job on. We need Windows.
    runs-on: windows-latest

    steps:
      # Step 1: Check out your repository code
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip' # Cache dependencies to speed up future builds

      # Step 3: Install project dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Download and place FFmpeg
      # This automatically downloads ffmpeg and puts it in the 'bin' folder,
      # so your .spec file can find it.
      - name: Download FFmpeg
        run: |
          New-Item -ItemType Directory -Force -Path "bin"
          Invoke-WebRequest -Uri "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full.7z" -OutFile "ffmpeg.7z"
          # The '7z' command is pre-installed on GitHub's Windows runners
          7z x ffmpeg.7z -offmpeg
          Copy-Item "ffmpeg/*/bin/ffmpeg.exe" "bin/ffmpeg.exe"
        shell: powershell

      # Step 5: Build the executable using PyInstaller
      - name: Build with PyInstaller
        run: pyinstaller TranscriptionApp_windows.spec

      # Step 6: Upload the final .exe file as a downloadable artifact
      # You will be able to download this from the "Actions" tab on your repo.
      - name: Upload Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TranscriptionOli-Windows-Executable
          path: dist/TranscriptionOli.exe